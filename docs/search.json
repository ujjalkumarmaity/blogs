[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "blogs",
    "section": "",
    "text": "This is a Quarto website.\nTo learn more about Quarto websites visit https://quarto.org/docs/websites."
  },
  {
    "objectID": "python/about1.html",
    "href": "python/about1.html",
    "title": "About",
    "section": "",
    "text": "About this site ujjal"
  },
  {
    "objectID": "python/python_advance.html",
    "href": "python/python_advance.html",
    "title": "Python Advance",
    "section": "",
    "text": "Lambda is a keyword in Python used to define functions, more specifically Anonymous Functions lambda arguments: expression\nsum_fun = lambda a,b : a+b\nsum_fun(2,3)\n5"
  },
  {
    "objectID": "python/python_advance.html#inheritance",
    "href": "python/python_advance.html#inheritance",
    "title": "Python Advance",
    "section": "Inheritance",
    "text": "Inheritance\nInheritance allows us to define a class that inherits all the methods and properties from another class.\nParent class is the class being inherited from, also called base class.\nChild class is the class that inherits from another class, also called derived class.\nWhen you add the __init__() function, the child class will no longer inherit the parent’s __init__() function.\nclass Student(Person):\n  def __init__(self, fname, lname):\nTo keep the inheritance of the parent’s __init__() function, add a call to the parent’s __init__() function:\nclass Student(Person):\n  def __init__(self, fname, lname):\n    Person.__init__(self, fname, lname)\nsuper() function that will make the child class inherit all the methods and properties from its parent\nclass Student(Person):\n  def __init__(self, fname, lname):\n    super().__init__(fname, lname)\nclass Person:\n    def __init__(self, fname, lname):\n        self.firstname = fname\n        self.lastname = lname\n\n    def printname(self):\n        print(self.firstname, self.lastname)\n\nclass Student(Person):\n    def __init__(self, fname, lname, year):\n        super().__init__(fname, lname)\n        self.graduationyear = year\n\n    def printstd(self):\n        print(\"Welcome\", self.firstname, self.lastname, \"to the class of\", self.graduationyear)\n\nx = Student(\"Mike\", \"Olsen\", 2023)\nx.printstd()\nWelcome Mike Olsen to the class of 2023"
  }
]